<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% if title %}{{ title }} - {% endif %}{{ metadata.title }}</title>
    <meta name="description" content="{% if description %}{{ description }}{% else %}{{ metadata.description }}{% endif %}">
    
    {# Favicon #}
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    
    {# Font Awesome #}
    <link rel="stylesheet" href="/scss/@fortawesome/fontawesome-free/css/all.min.css">
    
    {# Fonts #}
    <link rel="stylesheet" href="/scss/@fontsource/literata/400.css">
    <link rel="stylesheet" href="/scss/@fontsource/literata/400-italic.css">
    <link rel="stylesheet" href="/scss/@fontsource/literata/700.css">
    <link rel="stylesheet" href="/scss/@fontsource/red-hat-display/400.css">
    <link rel="stylesheet" href="/scss/@fontsource/red-hat-display/500.css">
    <link rel="stylesheet" href="/scss/@fontsource/red-hat-display/700.css">
    <link rel="stylesheet" href="/scss/@fontsource/ibm-plex-mono/400.css">
    
    {# KaTeX for math rendering #}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css">
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"></script>
    
    {# Styles #}
    <link rel="stylesheet" href="/scss/style.css">
    
    {# Feed #}
    <link rel="alternate" type="application/atom+xml" title="All Content" href="/feed.xml">
    <link rel="alternate" type="application/atom+xml" title="Blog Posts" href="/articles.xml">
    <link rel="alternate" type="application/atom+xml" title="Notes" href="/notes.xml">
    
    {# Open Graph #}
    <meta property="og:title" content="{% if title %}{{ title }} - {% endif %}{{ metadata.title }}">
    <meta property="og:description" content="{% if description %}{{ description }}{% else %}{{ metadata.description }}{% endif %}">
    <meta property="og:type" content="website">
    <meta property="og:url" content="{{ metadata.url }}{{ page.url }}">
</head>
<body>
    <a href="#main-content" class="visually-hidden">Skip to main content</a>
    
    <div class="grid-background">
        <div class="flow">
            {% include "header.njk" %}

            <main id="main-content" class="container flow" style="--flow-space: var(--space-l)">
                {{ content | safe }}
            </main>
        </div>
    </div>

    <footer class="site-footer">
        <div class="container">
            {% include "social-links.njk" %}
            <p class="text-center">Â© {% year %} {{ metadata.author.name }}. Except when otherwise noted, content licensed under <a href="https://creativecommons.org/licenses/by-sa/4.0/">CC-BY-SA 4.0</a>. </p>
            <p class="text-center">Powered by <a href="https://www.11ty.dev/">11ty</a> and hosted on <a href="https://pages.cloudflare.com/">Cloudflare Pages</a>. Last updated: {% buildTime %}</p>
        </div>
    </footer>

    <script>
        // Theme toggle functionality
        function initThemeToggle() {
            const themeToggles = document.querySelectorAll('.theme-toggle');
            const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
            
            // Function to get the current theme
            const getCurrentTheme = () => {
                if (localStorage.getItem('theme')) {
                    return localStorage.getItem('theme');
                }
                return prefersDarkScheme.matches ? 'dark' : 'light';
            };

            // Function to set the theme
            const setTheme = (theme) => {
                document.documentElement.setAttribute('data-theme', theme);
                localStorage.setItem('theme', theme);
            };

            // Set initial theme
            setTheme(getCurrentTheme());

            // Toggle theme when any theme toggle button is clicked
            themeToggles.forEach(toggle => {
                toggle.addEventListener('click', () => {
                    const currentTheme = getCurrentTheme();
                    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
                    setTheme(newTheme);
                });
            });

            // Listen for system theme changes
            prefersDarkScheme.addEventListener('change', (e) => {
                if (!localStorage.getItem('theme')) {
                    setTheme(e.matches ? 'dark' : 'light');
                }
            });
        }

        // Mobile navigation functionality
        function initMobileNav() {
            const mobileHeader = document.querySelector('.mobile-header');
            const navToggle = mobileHeader.querySelector('.nav-toggle');
            const nav = mobileHeader.querySelector('.site-nav');
            
            if (!navToggle || !nav) return;
            
            navToggle.addEventListener('click', () => {
                const isExpanded = navToggle.getAttribute('aria-expanded') === 'true';
                navToggle.setAttribute('aria-expanded', !isExpanded);
                nav.classList.toggle('is-active');
                
                // Prevent body scroll when menu is open
                document.body.style.overflow = isExpanded ? '' : 'hidden';
            });
            
            // Close menu when clicking outside
            document.addEventListener('click', (e) => {
                if (!nav.contains(e.target) && !navToggle.contains(e.target) && nav.classList.contains('is-active')) {
                    nav.classList.remove('is-active');
                    navToggle.setAttribute('aria-expanded', 'false');
                    document.body.style.overflow = '';
                }
            });
            
            // Close menu when pressing Escape key
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape' && nav.classList.contains('is-active')) {
                    nav.classList.remove('is-active');
                    navToggle.setAttribute('aria-expanded', 'false');
                    document.body.style.overflow = '';
                }
            });
        }

        // Initialize when DOM is loaded
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => {
                initThemeToggle();
                initMobileNav();
            });
        } else {
            initThemeToggle();
            initMobileNav();
        }
    </script>
    
    {% if title === "Blog" %}
    <script src="/js/blog-filter.js"></script>
    {% endif %}
</body>
</html> 